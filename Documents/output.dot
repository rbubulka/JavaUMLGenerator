digraph G { rankdir=BT;
"NoMethod" [
shape="record",
label= <{NoMethod||+&#60;init&#62; void<br align="left"/>+parse void<br align="left"/>}>];

"MethodsParser" [
shape="record",
label= <{<i>MethodsParser</i>|#opcode : I<br align="left"/>#text : Ljava&#47;lang&#47;String;<br align="left"/>#otherparser : Lparsers&#47;MethodsParser;<br align="left"/>|+&#60;init&#62; void<br align="left"/>+parse void<br align="left"/>}>];

"Object" [
shape="record",
label= <{Object||-registerNatives void<br align="left"/>#clone void<br align="left"/>#finalize void<br align="left"/>+&#60;init&#62; void<br align="left"/>+getClass ()Ljava&#47;lang&#47;Class&#60;*&#62;; <br align="left"/>+hashCode void<br align="left"/>+equals void<br align="left"/>+toString void<br align="left"/>+notify void<br align="left"/>+notifyAll void<br align="left"/>+wait void<br align="left"/>+wait void<br align="left"/>+wait void<br align="left"/>}>];

"PublicClassParser" [
shape="record",
label= <{PublicClassParser||+&#60;init&#62; void<br align="left"/>}>];

"UMLGenerator" [
shape="record",
label= <{UMLGenerator|-parser : LNodeGetter&#47;FileGetter;<br align="left"/>-methodparser : Lparsers&#47;MethodsParser;<br align="left"/>-fieldparser : Lparsers&#47;FieldsParser;<br align="left"/>-classparser : Lparsers&#47;ClassParser;<br align="left"/>-outputmaker : LoutputMakers&#47;OutputMaker;<br align="left"/>-output : Ljava&#47;lang&#47;String;<br align="left"/>-recursive : Z<br align="left"/>-classnames : Ljava&#47;util&#47;ArrayList;<br align="left"/>-argsmap : Ljava&#47;util&#47;HashMap;<br align="left"/>|+&#60;init&#62; void<br align="left"/>+getNodes void<br align="left"/>}>];

"Printer" [
shape="record",
label= <{&#60;&#60;interface&#62;&#62;<br/>Printer||+print void<br align="left"/>}>];

"OutputMaker" [
shape="record",
label= <{&#60;&#60;interface&#62;&#62;<br/>OutputMaker||+fileWrite (Ljava&#47;lang&#47;String;Ljava&#47;util&#47;List&#60;Ljava&#47;util&#47;HashMap&#60;Ljava&#47;lang&#47;String;Ljava&#47;lang&#47;String;&#62;;&#62;;Ljava&#47;util&#47;Set&#60;Ljava&#47;lang&#47;String;&#62;;)V <br align="left"/>}>];

"GVFilePrinter" [
shape="record",
label= <{GVFilePrinter||+&#60;init&#62; void<br align="left"/>+main void<br align="left"/>+start void<br align="left"/>+print void<br align="left"/>}>];

"PrivateFieldsParser" [
shape="record",
label= <{PrivateFieldsParser||+&#60;init&#62; void<br align="left"/>}>];

"NoField" [
shape="record",
label= <{NoField||+&#60;init&#62; void<br align="left"/>+parse void<br align="left"/>}>];

"FieldsParser" [
shape="record",
label= <{<i>FieldsParser</i>|#opcode : I<br align="left"/>#text : Ljava&#47;lang&#47;String;<br align="left"/>#otherparser : Lparsers&#47;FieldsParser;<br align="left"/>|+&#60;init&#62; void<br align="left"/>+parse void<br align="left"/>}>];

"ClassFileGetter" [
shape="record",
label= <{ClassFileGetter||+&#60;init&#62; void<br align="left"/>+addClasses (Ljava&#47;util&#47;ArrayList&#60;Ljava&#47;lang&#47;String;&#62;;Ljava&#47;util&#47;Set&#60;Lorg&#47;objectweb&#47;asm&#47;tree&#47;ClassNode;&#62;;Ljava&#47;util&#47;Set&#60;Ljava&#47;lang&#47;String;&#62;;Z)V <br align="left"/>}>];

"PublicFieldsParser" [
shape="record",
label= <{PublicFieldsParser||+&#60;init&#62; void<br align="left"/>}>];

"PublicMethodsParser" [
shape="record",
label= <{PublicMethodsParser||+&#60;init&#62; void<br align="left"/>}>];

"ProtectedFieldsParser" [
shape="record",
label= <{ProtectedFieldsParser||+&#60;init&#62; void<br align="left"/>}>];

"Parser" [
shape="record",
label= <{&#60;&#60;interface&#62;&#62;<br/>Parser||+parse void<br align="left"/>}>];

"ProtectedClassParser" [
shape="record",
label= <{ProtectedClassParser||+&#60;init&#62; void<br align="left"/>}>];

"NodeParseToUML" [
shape="record",
label= <{NodeParseToUML|-mparser : Lparsers&#47;MethodsParser;<br align="left"/>-fparser : Lparsers&#47;FieldsParser;<br align="left"/>-cparser : Lparsers&#47;ClassParser;<br align="left"/>|+&#60;init&#62; (Lparsers&#47;MethodsParser;Lparsers&#47;FieldsParser;Lparsers&#47;ClassParser;Ljava&#47;util&#47;List&#60;Lparsers&#47;Parser;&#62;;)V <br align="left"/>+doParse (Ljava&#47;util&#47;Set&#60;Lorg&#47;objectweb&#47;asm&#47;tree&#47;ClassNode;&#62;;)Ljava&#47;util&#47;List&#60;Ljava&#47;util&#47;HashMap&#60;Ljava&#47;lang&#47;String;Ljava&#47;lang&#47;String;&#62;;&#62;; <br align="left"/>}>];

"Application" [
shape="record",
label= <{<i>Application</i>|-hostServices : Ljavafx&#47;application&#47;HostServices;<br align="left"/>-userAgentStylesheet : Ljava&#47;lang&#47;String;<br align="left"/>+STYLESHEET_CASPIAN : Ljava&#47;lang&#47;String;<br align="left"/>+STYLESHEET_MODENA : Ljava&#47;lang&#47;String;<br align="left"/>|+launch (Ljava&#47;lang&#47;Class&#60;+Ljavafx&#47;application&#47;Application;&#62;;[Ljava&#47;lang&#47;String;)V <br align="left"/>+launch void<br align="left"/>+&#60;init&#62; void<br align="left"/>+init void<br align="left"/>+start void<br align="left"/>+stop void<br align="left"/>+getHostServices void<br align="left"/>+getParameters void<br align="left"/>+notifyPreloader void<br align="left"/>+getUserAgentStylesheet void<br align="left"/>+setUserAgentStylesheet void<br align="left"/>}>];

"PrivateMethodsParser" [
shape="record",
label= <{PrivateMethodsParser||+&#60;init&#62; void<br align="left"/>}>];

"ClassParser" [
shape="record",
label= <{<i>ClassParser</i>|#opcode : I<br align="left"/>#text : Ljava&#47;lang&#47;String;<br align="left"/>#otherparser : Lparsers&#47;ClassParser;<br align="left"/>|+&#60;init&#62; void<br align="left"/>+parse void<br align="left"/>}>];

"ProtectedMethodsParser" [
shape="record",
label= <{ProtectedMethodsParser||+&#60;init&#62; void<br align="left"/>}>];

"FileGetter" [
shape="record",
label= <{&#60;&#60;interface&#62;&#62;<br/>FileGetter||+addClasses (Ljava&#47;util&#47;ArrayList&#60;Ljava&#47;lang&#47;String;&#62;;Ljava&#47;util&#47;Set&#60;Lorg&#47;objectweb&#47;asm&#47;tree&#47;ClassNode;&#62;;Ljava&#47;util&#47;Set&#60;Ljava&#47;lang&#47;String;&#62;;Z)V <br align="left"/>}>];

"Runner" [
shape="record",
label= <{Runner||+&#60;init&#62; void<br align="left"/>+main void<br align="left"/>}>];

"GVMaker" [
shape="record",
label= <{GVMaker|-printer : Lprinting&#47;Printer;<br align="left"/>|-generateRelationsString (Ljava&#47;util&#47;Set&#60;Ljava&#47;lang&#47;String;&#62;;Ljava&#47;util&#47;HashMap&#60;Ljava&#47;lang&#47;String;Ljava&#47;lang&#47;String;&#62;;)Ljava&#47;lang&#47;StringBuilder; <br align="left"/>+&#60;init&#62; void<br align="left"/>+fileWrite (Ljava&#47;lang&#47;String;Ljava&#47;util&#47;List&#60;Ljava&#47;util&#47;HashMap&#60;Ljava&#47;lang&#47;String;Ljava&#47;lang&#47;String;&#62;;&#62;;Ljava&#47;util&#47;Set&#60;Ljava&#47;lang&#47;String;&#62;;)V <br align="left"/>+splitclassname void<br align="left"/>+printcheck (Ljava&#47;lang&#47;String;Ljava&#47;util&#47;List&#60;Ljava&#47;util&#47;HashMap&#60;Ljava&#47;lang&#47;String;Ljava&#47;lang&#47;String;&#62;;&#62;;Ljava&#47;util&#47;List&#60;Ljava&#47;lang&#47;String;&#62;;)V <br align="left"/>}>];

OutputMaker -> Object [arrowhead="onormal"];
GVFilePrinter -> Printer [arrowhead = "onormal", style = "dashed"];
PublicFieldsParser -> FieldsParser [arrowhead="onormal"];
UMLGenerator -> Object [arrowhead="onormal"];
PrivateMethodsParser -> MethodsParser [arrowhead="onormal"];
PrivateFieldsParser -> FieldsParser [arrowhead="onormal"];
Application -> Object [arrowhead="onormal"];
GVMaker -> Object [arrowhead="onormal"];
GVMaker -> OutputMaker [arrowhead = "onormal", style = "dashed"];
ClassFileGetter -> Object [arrowhead="onormal"];
FieldsParser -> Parser [arrowhead = "onormal", style = "dashed"];
GVFilePrinter -> Application [arrowhead="onormal"];
NodeParseToUML -> Object [arrowhead="onormal"];
MethodsParser -> Object [arrowhead="onormal"];
Printer -> Object [arrowhead="onormal"];
ClassFileGetter -> FileGetter [arrowhead = "onormal", style = "dashed"];
ClassParser -> Object [arrowhead="onormal"];
NoMethod -> MethodsParser [arrowhead="onormal"];
ProtectedClassParser -> ClassParser [arrowhead="onormal"];
NoField -> FieldsParser [arrowhead="onormal"];
Parser -> Object [arrowhead="onormal"];
ProtectedFieldsParser -> FieldsParser [arrowhead="onormal"];
ProtectedMethodsParser -> MethodsParser [arrowhead="onormal"];
ClassParser -> Parser [arrowhead = "onormal", style = "dashed"];
Runner -> Object [arrowhead="onormal"];
MethodsParser -> Parser [arrowhead = "onormal", style = "dashed"];
FieldsParser -> Object [arrowhead="onormal"];
PublicClassParser -> ClassParser [arrowhead="onormal"];
FileGetter -> Object [arrowhead="onormal"];
PublicMethodsParser -> MethodsParser [arrowhead="onormal"];
}